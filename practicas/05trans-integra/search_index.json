[["index.html", "Transformar e Integrar Información Geográfica Sistemas de Información Geográfica 1 Introducción", " Transformar e Integrar Información Geográfica Sistemas de Información Geográfica José Samos Jiménez (jsamos@ugr.es) Dpto. de Lenguajes y Sistemas Informáticos Universidad de Granada Curso 2024-2025 Citar y Licencia: https://doi.org/10.6084/m9.figshare.26965681.v1 1 Introducción En este tema vamos a trabajar con datos obtenidos en el tema anterior. Por tanto, es imprescindible tener disponibles los datos obtenidos en los ejercicios del tema anterior para poder continuar. Objetivos Repasar conceptos básicos sobre transformación e integración de información geográfica explicados en clase de teoría materializados en herramientas específicas. Unir varias capas ráster para formar otro ráster. Recortar capas vectoriales y ráster mediante un rectángulo. Recortar capas vectoriales y ráster mediante cualquier forma poligonal. Proyectar capas vectoriales y ráster. "],["datos-de-partida-y-transformaciones-a-realizar.html", "2 Datos de partida y transformaciones a realizar 2.1 Datos de partida 2.2 Transformaciones a realizar", " 2 Datos de partida y transformaciones a realizar En este apartado se listan los datos de partida y se indican de forma general las transformaciones a realizar sobre ellos. En el resto de apartados de este capítulo se muestra cómo realizar las operaciones necesarias para llevar a cabo las transformaciones indicadas usando R y QGIS. Las transformaciones concretas, la herramienta a usar en cada caso y los resultados a obtener se detallan en los ejercicios del capítulo. 2.1 Datos de partida Para el municipio seleccionado, los datos de partida que necesitamos, obtenidos en el capítulo ??, son los siguientes: Un archivo en formato GeoPackage con: término municipal y mínimo rectángulo que contiene al término municipal, una capa compuesta por líneas sobre vías de comunicación, una capa compuesta por líneas sobre red hidrográfica, archivos de ortofotografía reciente que abarque todo el rectángulo del municipio, archivos de MDT que abarque todo el rectángulo del municipio, un archivo de CartoCiudad con las capas manzana y portal de la provincia, un archivo de CORINE Land Cover, en formato GeoPackage, bandas de satélite Sentinel-2 o Landsat 8 del municipio, actuales y sin nubes. 2.2 Transformaciones a realizar Las transformaciones generales que realizaremos sobre nuestro conjunto de datos serán: Recortar todas las capas mediante (a partir de cada capa obtendremos dos): la capa del mínimo rectángulo que contiene el término municipal, el polígono de la capa del término municipal. Datos vectoriales: Revisar la codificación para comprobar que las palabras con tilde se muestran correctamente, en caso necesario, cambiarla adecuadamente. La revisión hay que hacerla antes de recortar la capa. Proyectarlos de manera que todos tengan el CRS de la proyección UTM del datum ETRS89 de la zona del municipio. Almacenarlos en formato GeoPackage, el resultado de cada capa original en un archivo distinto: en cada archivo tendremos la capa recortada por el polígono del término municipal y por el mínimo rectángulo que lo contiene. Datos ráster: Si hemos necesitado obtener varios archivos para cubrir la zona del municipio, fusionarlos en un solo archivo. Los conservaremos con el CRS con el que los hayamos obtenido. Es posible que en algún caso haya que corregirlo por no estar completo. Almacenarlos en formato GeoTIFF. Cada capa obtenida a partir de la capa original (al recortarla) en un archivo distinto. Las transformaciones habrá que realizarlas en el orden adecuado (no necesariamente el indicado en la lista anterior): Para las capas vectoriales lo primero deberá ser comprobar que la codificación es correcta1. Si la capa es muy grande, nos puede interesar recortarla primero y después proyectarla, así evitamos la operación de proyección sobre los puntos que no vamos a usar. La última operación será guardarla en el formato indicado. Si hacemos modificaciones con la codificación incorrecta es posible que después sea más complicado corregirla.↩︎ "],["transformaciones-básicas-con-r.html", "3 Transformaciones básicas con R 3.1 Leer una capa 3.2 Reproyectar una capa 3.3 Guardar una capa 3.4 Recortar una capa 3.5 Tratar los archivos de una o varias carpetas 3.6 Otras operaciones", " 3 Transformaciones básicas con R A continuación se presentan las operaciones de transformación básicas que podemos realizar sobre las capas con R. Para trabajar con las capas vectoriales utilizaremos el paquete sf, para las capas ráster usaremos los paquetes terra y satres. En ambos casos también podremos usar las funciones del paquete sigugr2. 3.1 Leer una capa 3.1.1 Leer una capa vectorial Cuando leamos una capa vectorial, para comprobar que la codificación de los caracteres es la adecuada, tenemos que comprobar que las palabras con tilde se vean correctamente. Por defecto, la función st_read() lee los datos en UTF-8. Si no se leen correctamente deberemos cambiar la codificación, generalmente a WINDOWS-1252, como se muestra en el ejemplo siguiente. file &lt;- &quot;cnig/cuadriculas/MTN25_ETRS89_Peninsula_Baleares_Canarias.shp&quot; cuadricula25 &lt;- sf::st_read(file, options = &quot;ENCODING=WINDOWS-1252&quot;) Al leer un formato de archivo que pueda contener varias capas, podemos consultar las capas disponibles mediante la función siguiente: file &lt;- &quot;lanjaron-jsamos.gpkg&quot; sf::st_layers(file) Adicionalmente, al leer un formato de archivo que pueda contener varias capas, podemos indicar la capa que queremos obtener. file &lt;- &quot;lanjaron-jsamos.gpkg&quot; layer &lt;- &quot;lanjaron-jsamos-25830&quot; lanjaron_jsamos &lt;- sf::st_read(file, layer = layer) Podemos representar la geometría de la capa leída mediante las funciones siguientes: terra::plot(sf::st_geometry(lanjaron_jsamos)) 3.1.2 Leer una capa ráster Se pueden leer todas las bandas de un ráster conjuntamente mediante la función rast del paquete terra. Las presentamos combinándolas con la función plotRGB. file &lt;- &quot;linea/ortofoto/102643_ortofoto2016_50cm.jp2&quot; ortofoto &lt;- terra::rast(file) terra::plotRGB(ortofoto) 3.1.3 Componer un ráster virtual a partir de varios ráster Si hemos obtenido varias capas ráster que, conjuntamente, cubren nuestra zona de trabajo, podemos definir un ráster virtual mediante la función vrt, a partir de un vector de archivos que podemos obtener directamente leyendo el contenido de una carpeta, como se muestra a continuación. folder &lt;- &quot;cnig/mdt05/&quot; files &lt;- list.files(path = folder, pattern = &quot;*.tif&quot;, full.names = TRUE) mdt05 &lt;- terra::vrt(files, filename= &quot;tmp/mdt05.vrt&quot;, overwrite = TRUE) terra::plot(mdt05) Como resultado, crea el archivo que se indica en el parámetro filename, correspondiente al ráster virtual, que podemos tratar como cualquier otro ráster. Es un archivo de pequeño tamaño porque se limita a referenciar al resto de capas que lo componen. Esta función es adecuada tanto para capas de una sola banda como para capas multibanda. También podemos usar directamente la función definida en el paquete de la asignatura a partir de la anterior. folder &lt;- &quot;cnig/mdt05/&quot; mdt05 &lt;- sigugr::compose_raster(folder) terra::plot(mdt05) 3.1.4 Obtener un ráster multibanda a partir de varias bandas Si tenemos las bandas almacenadas en archivos distintos (como ocurre con el caso de las bandas obtenidas al descargar los datos de los satélites), para obtener un ráster multibanda, debemos leerlas independientemente y generar a partir de ellas la nueva estructura. folder &lt;- &quot;esa/IMG_DATA_01/R10m/&quot; file1 &lt;- &quot;T30SVF_20230905T105621_B02_10m.jp2&quot; b2 &lt;- terra::rast(paste0(folder, file1)) file2 &lt;- &quot;T30SVF_20230905T105621_B03_10m.jp2&quot; b3 &lt;- terra::rast(paste0(folder, file2)) file3 &lt;- &quot;T30SVF_20230905T105621_B04_10m.jp2&quot; b4 &lt;- terra::rast(paste0(folder, file3)) bands &lt;- c(b4, b3, b2) terra::plotRGB(bands, stretch = &#39;lin&#39;) El ráster multibanda se genera al definir un vector de variables ráster. En este caso, se han definido en el orden adecuado para que la función plotRGB presente una fotografía en color. 3.1.5 Obtener un ráster con las bandas de satélite Para obtener un ráster a partir de las bandas de satélite, podemos usar el paquete satres que, utilizando las funciones descritas en los apartados anteriores, a partir de la carpeta que almacena los archivos ráster (independientemente de su anidamiento), genera una estructura con todas las bandas obtenidas de satélite, clasificadas por su resolución espacial, generando estructuras de ráster virtual si es necesario. esa &lt;- satres::satres(&quot;esa&quot;) A partir de la estructura generada, seleccionando la resolución espacial, podemos obtener objetos de la clase SpatRaster (definida en el paquete terra), y trabajar normalmente con ellos. esa |&gt; satres::get_spatial_resolution() r10m &lt;- esa |&gt; satres::as_SpatRaster(&quot;r10m&quot;) bands &lt;- c(r10m[[&#39;B04&#39;]], r10m[[&#39;B03&#39;]], r10m[[&#39;B02&#39;]]) terra::plotRGB(bands, stretch = &#39;lin&#39;) 3.2 Reproyectar una capa 3.2.1 Reproyectar una capa vectorial Proyectaremos una capa vectorial mediante la función st_transform. En el parámetro crs se puede indicar directamente el código EPSG de la capa o bien el CRS obtenido a partir de otra capa mediante las funciones que lo devuelven. lanjaron_jsamos_c25 &lt;- sf::st_transform(lanjaron_jsamos, crs = sf::st_crs(cuadricula25)) La función utilizada para obtener el CRS es adecuada para una capa vectorial y también para una ráster. En ambos casos también podemos usar la función terra::crs. 3.2.2 Reproyectar una capa ráster Un ráster se puede reproyectar mediante la función project del paquete terra. Hay que tener presente que la operación suele ser bastante costosa en tiempo de ejecución y es posible que se pierda información ya que la correspondencia entre las celdas del ráster inicial y del resultado puede no ser directa. ortofoto_lan_sat &lt;- terra::project(ortofoto, terra::crs(lanjaron_jsamos_sat)) 3.3 Guardar una capa 3.3.1 Guardar una capa vectorial Para guardar una capa vectorial, indicamos la variable con la capa, el nombre del archivo (el formato se toma de este nombre) y el nombre que le queremos dar a la capa. También podemos indicar si queremos que se borre el archivo si ya existe, mediante el parámetro delete_dsn. sf::st_write(obj = lanjaron_jsamos, dsn = &quot;tmp/lanjaron-jsamos.gpkg&quot;, layer = &quot;lanjaron-jsamos&quot;, delete_dsn = TRUE) sf::st_write(obj = lanjaron_jsamos_sat, dsn = &quot;tmp/lanjaron-jsamos.gpkg&quot;, layer = &quot;lanjaron_jsamos_sat&quot;) 3.3.2 Guardar una capa ráster Independientemente del número de bandas de ráster y de la estructura de datos de este, lo podemos guardar en un archivo mediante la función writeRaster. Mediante el parámetro filetype se indica el tipo de los datos de las bandas del ráster, aunque para el formato tif la opción por defecto de este parámetro es adecuada. terra::writeRaster(ortofoto, &quot;tmp/ortofoto.tif&quot;, filetype = &quot;GTiff&quot;, overwrite = TRUE) terra::writeRaster(ortofoto, &quot;tmp/ortofoto2.tif&quot;, overwrite = TRUE) 3.3.3 Guardar las bandas de satélite Si hemos creado un objeto satres a partir de las bandas de satélite, podemos guardarlas en archivos según su resolución espacial. esa |&gt; satres::save_by_resolution(out_dir = &quot;tmp/esa&quot;) 3.4 Recortar una capa 3.4.1 Recortar una capa vectorial He podido recortar todas las capas vectoriales sin ningún problema mediante las funciones que se indican a continuación. En el caso de CORINE Land Cover del año 2018, al recortar de cualquier forma, producía un error relacionado con el tipo de datos (ParseException: Unknown WKB type 12). Está solucionado mediante la función sigugr::clip_multipoligon. 3.4.1.1 Mediante un rectángulo La función st_crop recorta una capa vectorial mediante el mínimo rectángulo envolvente orientado de Norte a Sur de la capa vectorial que se indica. clc &lt;- sf::st_crop(clc, lanjaron_jsamos) 3.4.1.2 Mediante cualquier polígono La función st_intersection obtiene la intersección de las capas vectoriales que se indican. clc &lt;- sf::st_intersection(clc, lanjaron_jsamos) En el ejemplo se usa el resultado de recortar una capa mediante la función st_crop ya que contiene al polígono que usamos en la función st_intersection. También podemos usar la función siguiente con la misma finalidad. clc &lt;- sigugr::clip_vector(clc, lanjaron_jsamos) 3.4.2 Recortar una capa ráster 3.4.2.1 Mediante un rectángulo La función crop recorta una capa ráster mediante el mínimo rectángulo envolvente orientado de Norte a Sur de la capa vectorial que se indica. rb1 &lt;- terra::crop(rb, lanjaron_jsamos) 3.4.2.2 Mediante cualquier polígono La función mask recorta una capa ráster mediante el polígono de la capa vectorial que se indica. rb2 &lt;- terra::mask(rb1, lanjaron_jsamos) En el ejemplo se usa el resultado de recortar una capa mediante la función crop ya que contiene al polígono que usamos en la función mask. También podemos usar la función siguiente con la misma finalidad, definida en el paquete de la asignatura a partir de las anteriores. rb2 &lt;- sigugr::clip_raster(rb, lanjaron_jsamos) 3.4.3 Recortar las bandas de satélite Si hemos creado un objeto satres a partir de las bandas de satélite, podemos recortar todas las bandas conjuntamente mediante la función clip_bands(). esa_lan &lt;- esa |&gt; satres::clip_bands(lanjaron_jsamos) 3.5 Tratar los archivos de una o varias carpetas Para realizar la transformación en R podemos desarrollar código que permita tratar todos los archivos de una o varias carpetas conjuntamente. A continuación se presentan algunas de ellas. Adicionalmente, para simplificar el proceso de transformación, podemos definir una función con los pasos necesarios para transformar un tipo de archivo y llamarla repetidas veces pasándole los parámetros adecuados. 3.5.1 Obtener y tratar los archivos de una carpeta Mediante la función list.files obtenemos los archivos contenidos en la una carpeta, del tipo indicado mediante un patrón. A continuación, podemos iterar sobre ellos para tratarlos convenientemente. path &lt;- &quot;cnig/mdt05/&quot; lf &lt;- list.files(path = path, pattern = &quot;*.tif&quot;) for (f in lf) { paste0(path, f) # ... } 3.5.2 Obtener y tratar los archivos de varias carpetas Si necesitamos tratar los archivos de varias carpetas, podemos definir una lista de las carpetas (o de la forma cómo obtenerlas) e ir recorriéndola para tratarlas. path &lt;- &quot;usgs/&quot; lf &lt;- list.files( path = path, pattern = &quot;*.tif&quot;, recursive = TRUE, full.names = TRUE ) for (f in lf) { f # ... } 3.5.3 Descomprimir todos los archivos de una carpeta A veces tenemos que descargar varios archivos en formato zip o tar sobre un mismo tema para tratar su contenido conjuntamente. Podemos descomprimirlos indicando la carpeta en la que se encuentra mediante la función sat_untarzip(). path &lt;- &quot;originales/cnig/mdt&quot; r &lt;- satres::sat_untarzip(path, out_dir = &quot;tmp/mdt&quot;) Se puede usar en primer lugar con el parámetro only_show_files = TRUE para mostrar los archivos a descomprimir y las carpetas de salida. 3.6 Otras operaciones 3.6.1 Copiar estilos entre archivos GeoPackage Las capas vectoriales contenidas en un GeoPackage pueden tener asociado un estilo dentro del propio archivo. Por ejemplo, este es el caso de CORINE Land Cover: en los estilos se define la leyenda y los colores asociados a cada código. Aunque recortemos y almacenemos las capas de interés en un nuevo GeoPackage, los estilos no se verán afectados ni tampoco se incluirán automáticamente en el nuevo archivo. Una vez tengamos los dos archivos GeoPackage disponibles, podemos copiar los estilos de uno a otro mediante la función siguiente: from = &quot;cnig/clc/CLC2018_ES.gpkg&quot; to = &quot;tmp/clc_lanjaron_jsamos.gpkg&quot; sigugr::copy_styles_layer(from, to) Disponible solo en GitHub. Se instala mediante devtools::install_github(\"josesamos/geogenr\")↩︎ "],["transformaciones-básicas-con-qgis.html", "4 Transformaciones básicas con QGIS 4.1 Codificación de los caracteres en una capa 4.2 Reproyectar una capa 4.3 Componer un ráster virtual a partir de varios ráster 4.4 Recortar una capa ráster 4.5 Recortar una capa vectorial", " 4 Transformaciones básicas con QGIS 4.1 Codificación de los caracteres en una capa Podemos comprobar si la codificación de los caracteres de una capa es correcta observando palabras que lleven tilde, por ejemplo abriendo la tabla de atributos de la capa y viendo las columnas con datos de nombres. Hay muchas codificaciones posibles pero, generalmente, en caso de observar que no se muestran correctamente palabras con tilde, el problema se debe a que la capa tiene codificación UTF-8 y se ha considerado que tiene la del sistema (System) o viceversa. Si ocurre esto, podemos cambiar la codificación en el apartado Fuente de la ventana Layer Properties de la capa (se abre desde el menú contextual de la capa o bien pulsando sobre la opción Capa &gt; Propiedades de la capa…). 4.2 Reproyectar una capa Para cambiar el SRC de una capa (reproyectarla), lo que hacemos es guardar una nueva capa a partir de la original. Como vimos en el apartado 3.3, seleccionamos la capa y pulsamos sobre la opción Capa &gt; Guardar como…, también se puede hacer la misma operación desde el menú contextual de la capa, pulsamos sobre Exportar &gt; Guardar objetos como… Figura 4.1: Seleccionar SRC al guardar una capa en un archivo. En la ventana que se abre (figura 4.1), definimos el formato de la nueva capa, su nombre y ubicación, y, en el campo SRC, pulsando sobre el icono Seleccionar SRC que hay a su derecha, seleccionamos el nuevo SRC3. Figura 4.2: Selección del SRC. La selección del SRC se lleva a cabo en la ventana de la figura 4.2, si conocemos el código EPSG de la nueva capa, lo podemos introducir en el campo Filtrar y seleccionamos el SRC correspondiente. Esta operación se puede aplicar tanto a capas vectoriales como a capas ráster. 4.3 Componer un ráster virtual a partir de varios ráster Si trabajamos con una zona relativamente amplia, seguramente hayamos obtenido varias capas ráster que, conjuntamente, cubren la zona de trabajo, probablemente cubran incluso una zona más amplia que la que necesitamos. Hay varias posibilidades para operar conjuntamente con todas las capas, por ejemplo, podríamos fusionarlas en un solo ráster (se genera una nueva capa con todos los datos). Otra posibilidad más sencilla es generar un ráster virtual a partir de los componentes (ocupa poco espacio nuevo porque se basa en las otras capas). Esta última posibilidad es adecuada sobre todo si después vamos a recortar el ráster resultante, por tanto, es la que vamos a considerar. Figura 4.3: Construir un ráster virtual. Para definir un ráster virtual a partir de varias capas, cargamos todas las capas en el visor para poder apreciar el ráster que forman conjuntamente. A continuación, pulsamos sobre Ráster &gt; Miscelaneous &gt; Construir ráster virtual… (figura 4.3). Figura 4.4: Opciones para construir un ráster virtual. En la ventana que se abre (figura 4.4), en el campo Input layers, pulsando sobre el botón con puntos suspensivos situado a la derecha, seleccionamos las capas que compondrán el ráster: si solo hemos cargado las capas del ráster (recomendable), podemos seleccionar todas las capas pulsando sobre el botón Seleccionar todo. Dado que todas las capas tendrán la misma resolución, no afecta el criterio que elijamos en el campo Resolution (puede obtener la resolución media, la más fina o la más gruesa). Es muy importante tener deseleccionada la opción Place each input file into a separate band porque, en caso de estar seleccionada, el resultado sería un ráster multibanda y no es lo que necesitamos. En la parte inferior de la ventana, en Llamada a la consola de GDAL/OGR, se muestra el código que se genera en función de los parámetros que vamos definiendo. Para generar esta nueva capa, QGIS se basa en la funcionalidad que ofrecen las librerías GDAL/OGR. Si vamos a usar la capa virtual en otros proyectos, podemos salvarla indicando el nombre del archivo en el campo Virtual; si solo queremos operar con la nueva capa, podemos dejar que la guarde en un archivo temporal. Una vez definidos todos los parámetros, pulsamos sobre el botón Ejecutar para llevar a cabo el proceso de definición de la nueva capa. En la pestaña Registro de la ventana nos indica que lo va haciendo y también avisa cuando haya terminado. Una vez generada la nueva capa (le asigna el nombre Virtual), para simplificar, podemos eliminar las capas componentes del visor de capas y trabajar solo con la nueva capa virtual (recomendable). Si al realizar operaciones sobre el raster virtual, podemos probar a salvarlo como una capa, iniciar un nuevo proyecto con la nueva capa y realizar las operaciones sobre ella. 4.4 Recortar una capa ráster Para recortar una capa ráster, vamos a contemplar dos posibilidades: recortarla mediante un rectángulo orientado de Norte a Sur o hacerlo mediante cualquier polígono. En ambos casos, vamos a usar una capa vectorial como máscara de la operación de recorte. Cuando vayamos a aplicar operaciones en las que intervengan varias capas, es importante que todas las capas tengan el mismo SRC4. Por otro lado, evitaremos reproyectar capas ráster: si la capa vectorial no tiene el mismo SRC que la capa ráster, generaremos una nueva capa vectorial reproyectando la capa original. 4.4.1 Mediante un rectángulo Visualizamos la capa ráster y la capa vectorial (rectángulo orientado de Norte a Sur) conjuntamente, y pulsamos sobre Ráster &gt; Extraction &gt; Cortar ráster por capa de máscara… Se abre una ventana para definir los parámetros de la operación. Seleccionamos en el campo Capa de entrada la capa ráster y en el campo Capa de máscara la capa vectorial (aquí podemos comprobar que las capas tengan el mismo SRC). Comprobamos que la única opción seleccionada sea Match the extent of the clipped raster to the extent of the mask layer (Ajustar la extensión del ráster cortado a la extensión de la capa de máscara). En el campo Cortado (máscara), pulsando sobre el botón con puntos suspensivos situado a su derecha, elegimos la opción Guardar a archivo… e indicamos la ubicación, el nombre y el tipo: el tipo debe ser TIF files. También marcamos la opción Abrir el archivo de salida después de ejecutar el algoritmo. El comando que ha generado con la configuración que hemos indicado, se puede ver en el apartado Llamada a la consola GDAL/OGR. Para ejecutar la operación, pulsamos sobre el botón Ejecutar. El resultado nos lo muestra en la pestaña Registro de la misma ventana de definición de parámetros. Podemos cerrar la ventana y desactivar las otras capas para ver el resultado en la capa que llama con el nombre que hayamos indicado para el archivo de salida. 4.4.2 Mediante cualquier polígono Para recortar un ráster por cualquier polígono, al igual que para un rectángulo, visualizamos la capa ráster y la capa vectorial conjuntamente, y pulsamos sobre Ráster &gt; Extracción &gt; Cortar ráster por capa de máscara… Para mantener los bordes de la capa vectorial, en la definición de los parámetros de la operación de recorte, hemos de seleccionar la opción Crear una banda alfa de salida5. El resto de parámetros se definen igual que para el recorte mediante un rectángulo. 4.5 Recortar una capa vectorial Para recortar una capa vectorial, vamos a presentar la operación básica de recorte y, en casos donde la capa original tenga un estilo predefinido, adicionalmente vamos a copiar el estilo de la capa. Al igual que para las capas ráster, cuando vayamos a aplicar operaciones en las que intervengan varias capas, es importante que todas las capas tengan el mismo SRC. En el caso de trabajar con capas vectoriales, se podría reproyectar cualquiera de ellas. Si vamos a recortar una capa, generalmente será de mayor tamaño que la capa que vamos a recortar, entonces reproyectaremos la capa de máscara para la operación de recorte. 4.5.1 Recortar cualquier capa vectorial Visualizamos las dos capas vectoriales conjuntamente, y pulsamos sobre Vector &gt; Geoprocessing Tools &gt; Cortar… Se abre una ventana para definir los parámetros de la operación. Seleccionamos en el campo Capa de entrada la capa vectorial a recortar y en el campo Capa de superposición la capa vectorial a usar como plantilla (aquí podemos comprobar que las capas tengan el mismo SRC). En el campo Cortado, pulsando sobre el botón con puntos suspensivos situado a su derecha, elegimos la opción Guardar a archivo… e indicamos la ubicación, el nombre y el tipo. También marcamos la opción Abrir el archivo de salida después de ejecutar el algoritmo. El comando que ha generado con la configuración que hemos indicado, se puede ver en el apartado Llamada a la consola GDAL/OGR. Para ejecutar la operación, pulsamos sobre el botón Ejecutar. El resultado nos lo muestra en la pestaña Registro de la misma ventana de definición de parámetros. Podemos cerrar la ventana y desactivar las otras capas para ver el resultado. 4.5.2 Copiar y pegar el estilo de una capa vectorial Si comparamos el estilo de la capa resultado con el estilo de la capa original, observamos que la capa resultado lo ha perdido. Se puede copiar el estilo de una capa vectorial y aplicárselo a otra, en este caso, a la capa resultado. Para copiar el estilo de una capa, en el menú contextual de la capa, pulsamos sobre Estilos &gt; Copiar estilo &gt; Totas las categorías de estilo. De igual forma, en el menú contextual de la capa destino, pulsamos sobre Estilos &gt; Pegar estilo &gt; Totas las categorías de estilo. Para guardar ese estilo asociado a la capa, lo hacemos desde el menú contextual de la capa, pulsando sobre la opción Exportar &gt; Guardar como archivo de definición de capa… e indicamos la carpeta y el nombre del archivo. Figura 4.5: Guardar el estilo de una capa. Si usáramos un GeoPackage (o una BD PostGIS) en lugar de un Shapefile para guardar la capa, podríamos guardar el estilo dentro del propio GeoPackage. Accedemos a la ventana de propiedades de la capa almacenada en un GeoPackage y, en el apartado Simbología, pulsamos sobre la flecha del botón Estilo y seleccionamos la opción Guardar estilo… (figura 4.5). En la ventana que se abre, seleccionamos GeoPackage como destino del estilo, le damos un nombre al estilo e indicamos que se use como estilo predeterminado para la capa. Seleccionamos el SRC correspondiente a la zona de nuestro municipio (no el de la figura).↩︎ En principio deberían funcionar igual con distinto SRC, la experiencia es que se evitan errores y las operaciones se ejecutan más rápido si en cada una solo se realiza una transformación.↩︎ Si no seleccionamos esta opción, recorta el ráster por el polígono pero, adicionalmente, lo incluye en un rectángulo orientado de Norte a Sur y al resto de celdas de este le asigna el valor 0.↩︎ "],["ejercicios.html", "Ejercicios", " Ejercicios Consideraciones previas Herramientas para realizar los ejercicios Los ejercicios se podrán realizar con QGIS o R, o con una combinación de ambas, según las preferencias de cada persona. Nombres de los archivos generados en los ejercicios Los nombres de los archivos generados en los ejercicios han de tener la siguiente estructura: prefijo que exprese el contenido del archivo (p.e.: “vias_com_”) que se indicará en cada ejercicio el que hay que utilizar, municipio asignado (p.e., en mi caso “lanjaron_”), si el nombre es muy largo o tiene varias palabras se considerarán solo las primeras 8 letras sin espacios. usuario de correo electrónico de la persona que lo realiza (p.e., en mi caso “jsamos”). Cada capa vectorial de partida, una vez transformada, se almacenará en un GeoPackage con dos capas: una tendrá el mismo nombre del archivo y se corresponderá con la capa recortada por el polígono del municipio, otra contendrá “bbox_” entre el nombre del municipio y el usuario de correo, se corresponderá con la capa recortada por el rectángulo del municipio. Por ejemplo, en mi caso, para la capa con datos de vías de comunicación: nombre del archivo: vias_com_lanjaron_jsamos.gpkg nombre de las capas: vias_com_lanjaron_jsamos y vias_com_lanjaron_bbox_jsamos. Cada ráster recortado se almacenará en un archivo distinto, con el mismo criterio de nombres que el descrito para las capas vectoriales. Por ejemplo, en mi caso, para la ortofotografía (ráster multibanda), tendré dos archivos: ortofoto_lanjaron_jsamos.tif y ortofoto_lanjaron_bbox_jsamos.tif. Documentar la realización de los ejercicios Para documentar la realización de los ejercicios: Para cada capa generada, se incluirá una captura de pantalla completa de QGIS o RStudio donde se muestre: el nombre de la capa y la representación gráfica de la capa (mediante plot o mostrándola en QGIS) conjuntamente con la capa del contorno del municipio (no es necesario mostrar la tabla de datos ni sus metadatos). Para mostrar las capas se puede usar una herramienta distinta a la que se ha usado para obtenerlas (por ejemplo, se puede desarrollar en R y mostrala desde QGIS). Si se ha desarrollado con R se incluirá para en el ejercicio el fragmento de código correspondiente. Si se ha desarrollado con QGIS se indicarán las opciones de menú o apartados que se han utilizado para realizar las operaciones de transformación, indicando la configuración seleccionada en cada caso. Para cada capa se indicará su CRS (las vectoriales han de tener todas el mismo, las ráster no). Enunciados Realiza los ejercicios siguientes con los datos de tu municipio asignado siguiendo los criterios descritos en los apartados anteriores en lo referido a herramientas a usar, nomenclatura y documentación de su realización. Ejercicio 1. Vías de comunicación Genera los archivos siguientes con el prefijo que se indica: vías de comunicación: vias_com y red hidrográfica: red_hidro. Ejercicio 2. Ortofotografía Genera el archivo siguiente con el prefijo que se indica: ortofotografía: ortofoto. Ejercicio 3. MDT Genera el archivo siguiente con el prefijo que se indica: MDT: mdt. Ejercicio 4. Cartociudad Genera los archivos siguientes con el prefijo que se indica: CartoCiudad para manzana: cc_manzana y CartoCiudad para portal: cc_portal. Ejercicio 5. CORINE Land Cover Genera el archivo siguiente con el prefijo que se indica: CORINE Land Cover: clc. Incluye en el GeoPackage el estilo de la capa. Ejercicio 6. Bandas de satélite Genera el archivo o los archivos siguientes con el prefijo que se indica: Bandas de satélite: sat. Si cada banda está en un archivo, añade el nombre de la banda correspondiente en cada uno (p.e., sat_b2). En el caso de Sentinel-2, donde puede haber varias resoluciones espaciales para cada bada, es suficiente con considerar las bandas de 60 m. de resolución. Para documentar la realización del ejercicio, es suficiente con mostrar una de las bandas. Los datos obtenidos en este tema deberán conservarse y estar disponibles para ser utilizados en las actividades que desarrollaremos en los temas siguientes. "],["referencias.html", "Referencias", " Referencias "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
