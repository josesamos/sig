[["index.html", "Analizar Información Geográfica Sistemas de Información Geográfica 1 Introducción", " Analizar Información Geográfica Sistemas de Información Geográfica José Samos Jiménez (jsamos@ugr.es) Dpto. de Lenguajes y Sistemas Informáticos Universidad de Granada Curso 2024-2025 Citar y Licencia: https://doi.org/10.6084/m9.figshare.26969200.v1 Vídeo: https://youtu.be/7gDvaOdFAxQ 1 Introducción Disponemos de la información geográfica de nuestro municipio almacenada como archivos y en BD PostGIS. En este tema, vamos a aplicar varias técnicas de análisis a esta información desde QGIS o desde R. Objetivos Presentar diversas técnicas para realizar análisis vectorial desde QGIS y R, en concreto: Realizar consultas espaciales básicas mediante SQL sobre PostGIS desde QGIS. Realizar consultas espaciales básicas mediante SQL sobre PostGIS desde R. Presentar distintas técnicas de análisis de datos ráster. Generar datos vectoriales a partir de datos ráster. Generar datos ráster a partir de datos vectoriales. Utilizar los datos ráster generados para presentar los datos. A continuación, se irán presentando los pasos a realizar y cómo llevarlos a cabo con las distintas opciones consideradas. "],["consultas-espaciales-sobre-bd.html", "2 Consultas Espaciales sobre BD 2.1 Consultas desde QGIS 2.2 Consultas desde R", " 2 Consultas Espaciales sobre BD En este apartado vamos a ver cómo realizar Consultas Espaciales desde QGIS y desde R sobre PostGIS. 2.1 Consultas desde QGIS QGIS ofrece varias posibilidades para analizar información geográfica. En este caso, el análisis se realiza en la BD (PostGIS), mediante la consulta que ejecuta: QGIS actúa como medio de acceso a la BD y de representación gráfica del resultado. Las operaciones a realizar sobre BD están basadas en Marquez (2015). Para formular una consulta en SQL desde QGIS sobre una BD Espacial, en primer lugar, debemos acceder al administrador de BD de QGIS (pulsando sobre Base de datos &gt; Administrador de bases de datos…) y seleccionar una BD para conectarnos a ella. Previamente hemos de haber definido la conexión, como se ha hecho en el tema de almacenamiento de información geográfica. Una vez con acceso a la BD, debemos abrir la pestaña para formular consultas: pulsando sobre la opción Base de datos &gt; Ventana SQL. El resultado es que se abre una pestaña de formulación de consultas asociada a la BD seleccionada en el momento de abrir la ventana. Se pueden tener varias pestañas de consulta abiertas al mismo tiempo, una por cada BD distinta. 2.1.1 Consulta sobre una capa La consulta que vamos a definir se muestra a continuación. SELECT ST_Union(ST_Buffer(geom, 100)) as zona_rio FROM red_hidro_lanjaron_jsamos; Obtenemos un buffer (ST_Buffer) a partir de las líneas de una capa. Además, en la misma consulta, los componentes del resultado se fusionan (ST_Union). La consulta se ha definido en PostGIS para la capa correspondiente a la red hidrográfica del municipio. Figura 2.1: Consulta y resultado sobre PostGIS desde QGIS. En la figura 2.1, se puede ver la formulación de la consulta en la ventana de consultas de PostGIS. Al pulsar sobre el botón Ejecutar, PostGIS ejecuta la consulta y devuelve el resultado en forma de tabla. Si seleccionamos la opción Cargar como capa nueva, podemos indicar la columna que identifica los registros (si hay alguna) y la columna del resultado que contiene los datos geométricos (en la figura, la columna zona_rio); si pulsamos sobre el botón Cargar, carga los resultados como una capa más de QGIS, sobre la que podemos operar normalmente. Figura 2.2: Resultado de la consulta de PostGIS como capa en QGIS. La capa resultado de la consulta cargada en QGIS se muestra en la figura 2.2. Partiendo de una capa vectorial compuesta por líneas, hemos obtenido una capa compuesta por polígonos mediante las operaciones de transformación que hemos utilizado. 2.1.2 Consulta sobre dos capas Vamos a realizar un consulta sobre datos geográficos en la que intervienen dos capas. A continuación, se muestra la definición de la consulta considerada para PostGIS. SELECT p.* FROM cc_portal_lanjaron_jsamos p WHERE EXISTS ( SELECT * FROM red_hidro_lanjaron_jsamos WHERE ST_DWithin(p.geom, geom, 100) ); Se trata de obtener los portales (de la capa de CartoCiudad) que se encuentren a menos de una distancia determinada de un elemento de la red hidrográfica. Definiremos la distancia de manera que se obtenga un resultado no vacío. Figura 2.3: Consulta sobre dos capas y resultado obtenido. En la figura 2.3, se puede ver la formulación de la consulta. En este caso, podemos indicar la columna que identifica los registros y la columna del resultado que contiene los datos geométricos. Figura 2.4: Resultados de las consultas como capas en QGIS. La capa resultado de la consulta (junto con la capa resultado de la consulta anterior) cargada en QGIS se muestra en la figura 2.4. 2.2 Consultas desde R En este apartado vamos a realizar desde R, sobre una BD de nuestro municipio, las mismas consultas desarrolladas en el apartado 2.1 desde QGIS. 2.2.1 Consulta sobre una capa Para realizar una consulta sobre una BD podemos utilizar la función st_read del paquete sf. En el parámetro con indicamos la cadena de conexión, en este caso, la indicada para acceder a la BD PostGIS. library(sf) con &lt;- RPostgres::dbConnect( RPostgres::Postgres(), dbname = &#39;lanjaron_jsamos&#39;, host = &#39;localhost&#39;, port = &#39;5432&#39;, user = &#39;postgres&#39;, password = &#39;postgres&#39; ) query = paste( &#39;SELECT ST_Union(ST_Buffer(geom, 100)) as zona_rio&#39;, &#39;FROM red_hidro_lanjaron_jsamos&#39;, sep = &quot; &quot; ) resultado &lt;- st_read(con, query = query) plot(st_geometry(resultado)) La consulta también se define como una cadena que se pasa como parámetro a la función st_read. El resultado es una capa que podemos tratar normalmente Figura 2.5: Consulta sobre una capa y resultado obtenido en RStudio. En la figura 2.5, se muestra la consulta y el resultado obtenido en RStudio. Podemos obtener el mismo resultado utilizando la BD exclusivamente para obtener la capa original y transformándola adecuadamente mediante funciones del paquete sf, como se muestra a continuación. redHidro &lt;- st_read(con, layer=&quot;red_hidro_lanjaron_jsamos&quot;) resultado &lt;- st_union(st_buffer(redHidro, dist = 100)) plot(st_geometry(resultado)) Con QGIS podríamos haber realizado una transformación similar a partir de la capa original, mediante las operaciones disponibles en los menús para datos vectoriales. 2.2.2 Consulta sobre dos capas query = paste( &#39;SELECT p.*&#39;, &#39; FROM cc_portal_lanjaron_jsamos p&#39;, &#39;WHERE EXISTS (&#39;, &#39; SELECT *&#39;, &#39; FROM red_hidro_lanjaron_jsamos&#39;, &#39; WHERE ST_DWithin(p.geom, geom, 100)&#39;, &#39;)&#39;, sep = &quot; &quot; ) resultado2 &lt;- st_read(con, query = query) plot(st_geometry(resultado2), col = &#39;red&#39;, add = TRUE) En el fragmento de código anterior, se muestran las operaciones para realizar la consulta en la que intervienen dos capas y la presentación del resultado junto a al resultado obtenido en el último apartado. Se usa la variable con la cadena de conexión definida anteriormente. Figura 2.6: Consulta sobre dos capas y resultado obtenido en RStudio. En la figura 2.6, se muestra la consulta sobre dos capas y el resultado obtenido en RStudio. Referencias Marquez, Angel. 2015. PostGIS Essentials. Packt Publishing. "],["operaciones-sobre-bandas-de-satélite.html", "3 Operaciones sobre bandas de satélite 3.1 Color natural 3.2 Índice de vegetación", " 3 Operaciones sobre bandas de satélite Partiendo de las bandas de satélite para nuestro municipio, podemos realizar diversas composiciones de color. En este caso, vamos a obtener el llamado color natural. También vamos a obtener a partir de ellas un índice de vegetación de la zona. 3.1 Color natural Para obtener la composición color natural necesitamos las bandas 2, 3 y 4 de Landsat-8 o bien de Sentinel-2 (en ambos casos, esas bandas representan la misma información). 3.1.1 Obtención en QGIS En primer lugar, tenemos que crear un ráster virtual con esas bandas (Ráster &gt; Miscelánea &gt; Construir ráster virtual…). En la ventana de selección múltiple de las bandas de entrada, hemos de tener presente el orden de las bandas que seleccionamos ya que, posteriormente, se nombrarán como Banda 1, Banda 2 y Banda 3, en lugar de sus nombres originales. Tenemos que saber qué banda es cada una. Figura 3.1: Definir un ráster virtual multibanda. En la ventana de definición del ráster virtual (figura 3.1), es muy importante dejar seleccionada la opción Place each input file into a separate band. Esta opción es la diferencia entre un ráster virtual multibanda (como es el caso) y otro compuesto por otros ráster que se solapan. Figura 3.2: Definir un ráster virtual multibanda. Una vez creada la nueva capa, tenemos que indicar qué bandas se corresponden con las bandas roja, verde y azul. Esto se define en las propiedades de la nueva capa, en el apartado Simbología (figura 3.2). Partimos de las bandas 2, 3 y 4, al incorporarlas en el ráster virtual son, respectivamente, las bandas Banda 1, Banda 2 y Banda 3. Si miramos en cualquiera de las tablas de descripción de bandas de Landsat-8 o de Sentinel-2, la banda 4 (Banda 3 en el ráster virtual) es la banda roja, la banda 3 (Banda 2 en el ráster virtual) es la verde y la banda 2 (Banda 1 en el ráster virtual) es la azul. Esto es lo que se define en la figura 3.2. De igual forma, creando ráster virtuales con las bandas adecuadas, podemos generar las combinaciones que deseemos. 3.1.2 Combinar bandas en R A continuación se muestra cómo combinar bandas en R, en particular usando el resultado de satres almacenado en un archivo. Si no se tienen las bandas en el mismo archivo, como es evidente, se han de leer por separado. bboxr10m &lt;- terra::rast(&quot;Pr04/sat_bbox/r10m.tif&quot;) bands &lt;- c(bboxr10m[[&#39;B04&#39;]], bboxr10m[[&#39;B03&#39;]], bboxr10m[[&#39;B02&#39;]]) terra::plotRGB(bands, stretch = &#39;lin&#39;) terra::writeRaster(bands, &quot;Pr04/satfoto_lanjaron_bbox_jsamos.tif&quot;, filetype = &quot;GTiff&quot;, overwrite = TRUE) En este ejemplo, obtenemos el color verdadero a partir de las bandas con resolución de 10m, lo mostramos y lo almacenamos en un archivo. 3.2 Índice de vegetación El Índice de Vegetación de Diferencia Normalizada (NDVI) se utiliza para estimar la cantidad y desarrollo de la vegetación de una zona. Se considera la medición de la intensidad de la radiación de algunas bandas del espectro electromagnético que la vegetación emite o refleja1. Se define a partir de la banda roja (\\(Red\\)), que es la banda 4 de Landsat-8 y de Sentinel-2, y la banda correspondiente al infrarrojo cercano (\\(NIR\\)), banda 5 de Landsat-8 y banda 8 de Sentinel-2, mediante la siguiente expresión: \\[\\begin{equation} NDVI = \\frac{NIR - Red}{NIR + Red} \\end{equation}\\] Los valores NDVI oscilan entre -1 y 1: Vegetación sana: NDVI &gt; 0.2. Suelos desnudos o agua: NDVI cercano a 0 o negativo. 3.2.1 Obtención en QGIS Para calcular el índice de vegetación, podemos usar los datos de las bandas ráster conjuntamente en la calculadora ráster, accesible desde Ráster &gt; Calculadora ráster… Figura 3.3: Cálculo del índice de vegetación en la calculadora ráster. En la figura 3.3, se muestran las bandas de todos los ráster cargados en el proyecto, seleccionamos las bandas adecuadas según la expresión del índice (pulsando Doble-clic sobre el nombre de la banda en el apartado Bandas ráster, o sobre el operador en el apartado Operadores). La expresión definida se muestra en el apartado Expresión de la calculadora ráster. Podemos indicar el nombre de la capa de salida y el formato, o bien que se genere una capa temporal, en el apartado Capa de resultado. Figura 3.4: Selección de la rampa de color. Para mostrar los resultados de una forma más vistosa, podemos cambiar la rampa de color del ráster obtenido. Esa operación se realiza en el apartado Simbología de las propiedades del ráster (figura 3.4). En este caso, se ha seleccionado la rampa de color RdYlGn, en la que corresponden los colores verdes a los valores más altos del índice. 3.2.2 Cálculo en R En R, teniendo cada banda en una variable, definimos la expresión como si operáramos con cualquier tipo de datos, en este caso estamos operando con matrices. El resultado es una banda que podemos presentar como cualquier otra. En este caso, la presentamos usando una paleta de colores personalizada, de manera que las áreas con mucha vegetación (con valores cercanos a 1) se muestren en color verde. red &lt;- bboxr10m[[&#39;B04&#39;]] nir &lt;- bboxr10m[[&#39;B08&#39;]] ndvi &lt;- (nir - red) / (nir + red) colores_ndvi &lt;- colorRampPalette(c(&quot;brown&quot;, &quot;yellow&quot;, &quot;green&quot;))(100) terra::plot(ndvi, col = colores_ndvi, axes = TRUE) Para exportar el resultado como una imagen: png(&quot;ndvi.png&quot;, width = 800, height = 600) terra::plot(ndvi, col = colores_ndvi, axes = TRUE) dev.off() Se pueden encontrar más detalles en https://eos.com/es/make-an-analysis/ndvi/.↩︎ "],["análisis-de-superficies.html", "4 Análisis de superficies 4.1 Análisis de superficies desde QGIS 4.2 Análisis de superficies en R", " 4 Análisis de superficies En este apartado trabajaremos con el MDT del municipio y realizaremos las operaciones desde QGIS y desde R. 4.1 Análisis de superficies desde QGIS Las operaciones que vamos a realizar sobre el MDT se pueden llevar a cabo de varias formas. Podemos acceder a la caja de herramientas pulsado sobre Procesos &gt; Caja de herramientas. Figura 4.1: Caja de herramientas de Procesos. Dentro de la caja de herramientas, tenemos dos posibilidades, acceder al apartado Análisis del terreno ráster o bien al apartado GDAL &gt; Análisis ráster (figura 4.1). Adicionalmente, podemos acceder a algunas de las operaciones directamente desde el menú de QGIS, pulsando sobre Ráster &gt; Análisis. 4.1.1 Mapa de sombras Para calcular el mapa de sombras sobre el MDT desde el menú de QGIS, pulsamos sobre Ráster &gt; Análisis &gt; Mapa de sombras (Hillshade)… Figura 4.2: Definición del mapa de sombras. En la figura 4.2, se muestra la ventana de definición de los parámetros de la operación. Se puede indicar la posición de la luz en cuanto a altitud y azimut, en este caso se han dejado los valores por defecto. Para guardar el resultado, podemos indicar el nombre de un archivo en el campo Mapa de sombras (Hillshade). En el apartado Llamada a la consola de GDAL/OGR se puede ver el comando que se va formando en función de las opciones que seleccionemos. Al ejecutar la operación, obtenemos el mapa de sombras. Este mapa se suele usar para presentar datos (lo usaremos con ese fin). Por ejemplo, últimamente, en el apartado El Tiempo de RTVE suelen usar el mapa de sombras de España como fondo para presentar las previsiones meteorológicas. 4.1.2 Orientación Para obtener la orientación del terreno desde el menú de QGIS, pulsamos sobre Ráster &gt; Análisis &gt; Orientación… En algunas versiones de QGIS, en lugar de Orientación… aparece Aspecto… Es frecuente expresar la orientación mediante el azimut, por lo que podemos dejar los valores por defecto de los parámetros. Por la configuración seleccionada para la operación y los datos del terreno, podemos comprobar que los valores están comprendidos en el intervalo [0, 360] para la nueva capa generada (podemos verlo en el apartado Información de las propiedades de la capa o en la ventana Capas). 4.1.3 Pendiente Para obtener la pendiente del terreno desde el menú de QGIS, pulsamos sobre Ráster &gt; Análisis &gt; Pendiente… Por defecto expresa la pendiente en grados, aunque también se puede indicar que la exprese mediante un porcentaje. Los parámetros de configuración de esta operación son adecuados. Si hemos indicado que exprese el resultado en grados, los valores deberían estar en el intervalo [0, 90]. 4.1.4 Presentación de datos En este apartado, vamos a utilizar el MDT y el mapa de sombras para realizar una representación del terreno con una rampa de color adecuada. En el apartado Simbología de las propiedades del MDT, en el campo Tipo de renderizador seleccionamos Pseudocolor monobanda, en el campo Rampa de color seleccionamos la opción Crear nueva rampa de color… Se abre la ventana Tipo de rampa de color y seleccionamos el valor Catálogo: cpt:city. Para esta rampa de color, seleccionamos el nombre Topography y la paleta cd-a. De nuevo en la ventana del apartado Simbología, en el apartado Representación de capas, en el campo Modo de mezcla, elegimos la opción Multiplicar. Figura 4.3: Presentación con el MDT y el mapa de sombras. El resultado obtenido se puede apreciar en la figura 4.3. El orden de las capas en el proyecto es importante. 4.2 Análisis de superficies en R A continuación se muestran las operaciones básicas del análisis de superficies en R mediante el paquete terra. Las funciones utilizadas, mediante un parámetro adicional, permiten almacenar el resultado en un archivo. mdt_bbox &lt;- terra::rast(&quot;Pr04/mdt_lanjaron_bbox_jsamos.tif&quot;) slope &lt;- terra::terrain(mdt_bbox, v = &#39;slope&#39;, unit = &#39;radians&#39;) terra::plot(slope) aspect &lt;- terra::terrain(mdt_bbox, v = &#39;aspect&#39;, unit = &#39;radians&#39;) terra::plot(aspect) hill &lt;- terra::shade(slope, aspect, 40, 270) terra::plot(hill, col = grey(0:100 / 100)) Alternativamente, podemos presentar los datos de la forma siguiente, usando una paleta de colores personalizada: terra::plot( hill, col = grey(0:100 / 100), legend = FALSE, mar = c(2, 2, 1, 4) ) colores_mdt &lt;- colorRampPalette(c(&quot;brown&quot;, &quot;green&quot;, &quot;lightgreen&quot;, &quot;white&quot;))(100) colores_mdt &lt;- adjustcolor(colores_mdt, alpha.f = 0.35) terra::plot(mdt_bbox, col = colores_mdt, add = TRUE) "],["transformación-de-datos-para-análisis.html", "5 Transformación de datos para análisis 5.1 Transformaciones en QGIS 5.2 Transformaciones en R 5.3 Otras transformaciones en R", " 5 Transformación de datos para análisis En este apartado vamos a transformar los datos con el objetivo de adaptarlos a las necesidades para realizar operaciones de análisis con el resultado. Unas operaciones se muestran en QGIS, otras en R. 5.1 Transformaciones en QGIS A partir del MDT vamos a generar capas vectoriales de curvas (curvas de nivel) y puntos aleatorios a los que asociaremos su correspondiente altitud. 5.1.1 Curvas de nivel Para obtener las curvas de nivel, pulsamos sobre Ráster &gt; Extracción &gt; Curvas de nivel… En la ventana de definición de parámetros de la operación, es muy importante el campo Intervalo entre curvas de nivel, que determina la separación y, por tanto, el número de estas. Podemos dejar el valor por defecto o cambiarlo según nuestro propio criterio (según lo accidentado que sea el terreno). Si miramos la tabla de atributos de las curvas generadas, para cada una tenemos un atributo ELEV con la altitud. 5.1.2 Puntos aleatorios Para obtener un conjunto de puntos aleatorios a partir del MDT, pulsamos sobre Vectorial &gt; Herramientas de investigación &gt; Puntos aleatorios en la extensión… Figura 5.1: Obtención de puntos aleatorios. En la ventana de definición de parámetros de la operación (figura 5.1), en el campo Extensión de entrada seleccionamos la opción Calcular a partir de la capa… y seleccionamos el MDT; podemos indicar el número de puntos (en este caso se ha indicado el valor 1000); también se puede definir una restricción en cuanto a la distancia mínima entre puntos en metros, que en este caso no se ha indicado el valor 50. Como resultado, se han generado los puntos aleatorios en una nueva capa vectorial, dentro de los límites definidos por el MDT, sin embargo, los puntos no tienen asociada la altitud definida en su posición respecto al MDT. Para ello, necesitamos utilizar el complemento Point sampling tool. Figura 5.2: Obtención del valor asociado a los puntos aleatorios. Una vez instalado, accedemos a él mediante su icono en la barra de herramientas. En la ventana de definición de parámetros de la operación (figura 5.2), definimos la capa que contiene los puntos aleatorios y la lista de capas de las que tomar valores. También indicamos el archivo donde almacenar la nueva capa. En la nueva capa generada, los puntos tienen asociado el valor tomado del MDT. 5.2 Transformaciones en R A partir del MDT vamos a generar capas vectoriales de curvas de nivel y puntos aleatorios con la altitud. A continuación, se realizan otras transformaciones mediante R. 5.2.1 Curvas de nivel Obtenemos curvas de nivel a partir del MDT mediante la función para este fin del paquete terra: tenemos que indicar los niveles que queremos obtener. A continuación, generamos una capa vectorial para el paquete sf. file &lt;- &#39;datos/Lanjaron/p03out/mdt-lanjaron-bbox-jsamos.tif&#39; mdt &lt;- terra::rast(file) niveles &lt;- seq(0, max(terra::values(mdt), na.rm = TRUE), by = 100) contours &lt;- terra::as.contour(mdt, levels = niveles) contours_sf &lt;- sf::st_as_sf(contours) Podemos presentar las curvas obtenidas mediante el siguiente código: ggplot2::ggplot() + ggplot2::geom_sf(data = contours_sf, ggplot2::aes(color = level), size = 0.5) + ggplot2::scale_color_viridis_c(name = &quot;Altitud&quot;) + ggplot2::theme_minimal() 5.2.2 Puntos aleatorios Como vimos en el capítulo anterior, mediante el fragmento de código siguiente, obtenemos una muestra aleatoria de puntos en 3D. file &lt;- &#39;datos/Lanjaron/p03out/mdt-lanjaron-bbox-jsamos.tif&#39; mdt &lt;- terra::rast(file) # Extraer puntos y elevaciones del MDT puntos &lt;- as.data.frame(mdt, xy = TRUE, na.rm = TRUE) colnames(puntos) &lt;- c(&quot;x&quot;, &quot;y&quot;, &quot;z&quot;) # Seleccionar una muestra aleatoria muestra &lt;- sample(1:nrow(puntos), size = 1000, replace = FALSE) puntos &lt;- puntos[muestra, ] A continuación, podemos generar una capa a partir de las coordenadas de los puntos, mediante el código siguiente. puntos$geom &lt;- paste0(&quot;POINT Z (&quot;, puntos$x, &quot; &quot;, puntos$y, &quot; &quot;, puntos$z, &quot;)&quot;) puntos$id &lt;- 1:nrow(puntos) puntos &lt;- puntos[, c(&#39;id&#39;, &#39;geom&#39;)] sf_puntos &lt;- sf::st_as_sf(puntos, wkt = &quot;geom&quot;, crs = sf::st_crs(mdt)) Podemos presentar la muestra en 2D mediante el siguiente código: xyz &lt;- sf::st_coordinates(sf_puntos) ggplot2::ggplot() + ggplot2::geom_sf(data = sf_puntos, ggplot2::aes(color = xyz[, &#39;Z&#39;]), size = 0.5) + ggplot2::scale_color_viridis_c(name = &quot;Altitud&quot;) + ggplot2::theme_minimal() 5.3 Otras transformaciones en R A continuación, se muestran otras transformaciones sobre las capas que podemos necesitar para utilizarlas en operaciones de análisis. 5.3.1 Transformar capa vectorial en ráster Vamos a obtener una capa ráster a partir de la capa CORINE Land Cover. file &lt;- &quot;datos/Lanjaron/p03out/clc-lanjaron-jsamos.gpkg&quot; clc &lt;- sf::st_read(file, layer = &quot;clc-lanjaron-bbox-jsamos&quot;) Necesitamos generar un ráster base con las características que necesitemos. Podemos definir las características explícitamente, como se muestra a continuación. r_base &lt;- terra::rast(terra::ext(clc), resolution = 25, crs = sf::st_crs(clc)$wkt) O bien, obtenerlas a partir de un ráster que tengamos disponible, en este caso, el MDT. file &lt;- &#39;datos/Lanjaron/p03out/mdt-lanjaron-bbox-jsamos.tif&#39; mdt &lt;- terra::rast(file) r_base &lt;- terra::rast(mdt) Para obtener el ráster, debemos indicar, además de la capa vectorial, el ráster base y el campo de la capa vectorial cuyos valores almacenar en el resultado. clc$CODE_18 &lt;- as.integer(clc$CODE_18) r_clc &lt;- terra::rasterize(terra::vect(clc), r_base, field = &quot;CODE_18&quot;) terra::plot(r_clc) Para obtener los literales y colores asociados a los códigos almacenados en el ráster, podemos leer el componente de definición de estilos e interpretar la definición XML usando el paquete de la asignatura sigugr2. from &lt;- &quot;datos/Lanjaron/p03out/clc-lanjaron-jsamos.gpkg&quot; categorias &lt;- sigugr::get_layer_categories(from, r_clc) A partir del data frame categorias obtenido, podemos definir los literales del ráster y usar los colores para representarlo, como se muestra a continuación. levels(r_clc) &lt;- categorias terra::plot(r_clc, col = categorias$Color) 5.3.2 Obtener capas de distancias A partir de una capa vectorial, vamos a obtener capas de distancia en formato ráster y vectorial. Partimos de la capa de la red hidrográfica del municipio. file &lt;- &quot;datos/Lanjaron/p03out/tem-redh-lanjaron-jsamos.gpkg&quot; layer &lt;- &quot;tem-redh-lanjaron-jsamos&quot; redh_lanjaron_jsamos &lt;- sf::st_read(file, layer = layer) plot(sf::st_geometry(redh_lanjaron_jsamos)) Obtenemos la capa en formato vectorial con el mismo CRS del MDT, ya que vamos a usar el MDT como ráster base. mdt &lt;- terra::rast(&#39;datos/Lanjaron/p03out/mdt-lanjaron-bbox-jsamos.tif&#39;) r_base &lt;- terra::rast(mdt) redh_lanjaron_jsamos &lt;- sf::st_transform(redh_lanjaron_jsamos, crs = sf::st_crs(mdt)) redh_lanjaron_jsamos_terra &lt;- terra::vect(redh_lanjaron_jsamos) terra::plot(redh_lanjaron_jsamos_terra) Obtenemos el ráster de distancias a partir de la capa vectorial, tomando como ráster base el indicado (el obtenido a partir del MDT). r_dist &lt;- terra::distance(r_base, redh_lanjaron_jsamos_terra) terra::plot(r_dist) A partir del ráster, generamos la capa de curvas de nivel (como hemos hecho en el apartado 5.2.1). niveles &lt;- seq(0, max(terra::values(r_dist), na.rm = TRUE), by = 1000) contours &lt;- terra::as.contour(r_dist, levels = niveles) v_dist &lt;- sf::st_as_sf(contours) ggplot2::ggplot() + ggplot2::geom_sf(data = v_dist, ggplot2::aes(color = level), size = 0.5) + ggplot2::geom_sf(data = redh_lanjaron_jsamos, color = &quot;red&quot;, size = 1) + ggplot2::scale_color_viridis_c(name = &quot;Distancia&quot;) + ggplot2::theme_minimal() 5.3.3 Ajustar un ráster a otro Si queremos realizar una operación de análisis en la que intervengan dos capas ráster, ambas deberán tener las mismas características: CRS y resolución espacial. Podemos ajustar un ráster a otro mediante la función resample, como se muestra a continuación. Obtenemos las dos capas ráster. mdt &lt;- terra::rast(&#39;datos/Lanjaron/p03out/mdt-lanjaron-bbox-jsamos.tif&#39;) terra::plot(mdt) mdt sat &lt;- terra::rast(&#39;datos/Lanjaron/p03out/sat-r15m-lanjaron-bbox-jsamos.tif&#39;) terra::plot(sat) sat Adaptamos la banda de satélite a las características del MDT. sat_r &lt;- terra::resample(sat, mdt) terra::plot(sat_r) sat_r O viceversa. mdt_r &lt;- terra::resample(mdt, sat) terra::plot(mdt_r) mdt_r Disponible solo en GitHub. Se instala mediante devtools::install_github(\"josesamos/sigugr\")↩︎ "],["ejercicios.html", "Ejercicios Datos de trabajo Ejercicios", " Ejercicios Datos de trabajo Para el municipio seleccionado, los datos de partida los hemos obtenido en actividades anteriores. Podemos usarlos a partir de cualquiera de los formatos de almacenamiento disponibles. Ejercicios Todos los ejercicios valen igual. Ejercicio 1. Analizar bandas de satélite A partir de las bandas en el formato que prefieras, obtén el color natural y el índice de vegetación para tu municipio (mediante QGIS o R, solo uno de ellos). Almacena los resultados en formato GeoTIFF, en archivos cuyo nombre tenga como prefijo cn_ y ndvi_, respectivamente, más el nombre común de las bandas utilizadas (el nombre de las capas eliminando los componentes relativos a los nombres de bandas). Para documentar la realización del ejercicio, incluye, para cada capa obtenida, dos capturas de pantalla completa, una del entorno donde hayas realizado las operaciones y otra del resultado obtenido junto con el polígono del contorno del municipio. Ejercicio 2. Analizar superficies Utilizando el MDT rectangular de tu municipio, (mediante QGIS o R, solo uno de ellos) obtén las capas siguientes: mapa de sombras, orientación, pendiente. Almacena los resultados en formato GeoTIFF, en archivos cuyo nombre tenga como prefijo, respectivamente, ms_, or_, pe_ (más el nombre de las capa utilizada). Para documentar la realización del ejercicio, incluye, para cada capa obtenida, dos capturas de pantalla completa, una del entorno donde hayas realizado las operaciones y otra del resultado obtenido junto con el polígono del contorno del municipio. Ejercicio 3. Transformar CORINE Land Cover Utilizando la capa rectangular de CORINE Land Cover de tu municipio, obtén la capa equivalente en formato ráster. Almacena el resultado en formato GeoTIFF, en un archivo cuyo nombre tenga como prefijo r_ (más el nombre de la capa utilizada). Para documentar la realización del ejercicio, incluye dos capturas de pantalla completa, una del entorno donde hayas realizado las operaciones y otra del resultado obtenido junto con el polígono del contorno del municipio. Ejercicio 4. Obtener capas de distancias Utilizando la capa de la red hidrográfica (tem-redh-) o bien la de las vías de comunicación (tem-viac-) recortada por el polígono del contorno del municipio (solo una de ellas), obtén las capas de distancias en formato ráster y vectorial. Almacena los resultados en formato GeoTIFF y GeoPackage, respectivamente, en archivos cuyo nombre tenga como prefijo dist_ (más el nombre de la capa utilizada). Para documentar la realización del ejercicio, incluye cuatro capturas de pantalla completa, una de la capa utilizada (tem-redh- o tem-viac-), otra del entorno donde hayas realizado las operaciones y otras dos de los resultados obtenidos. "],["referencias.html", "Referencias", " Referencias Marquez, Angel. 2015. PostGIS Essentials. Packt Publishing. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
